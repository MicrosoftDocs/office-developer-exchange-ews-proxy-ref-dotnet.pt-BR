<Type Name="FindFolderType" FullName="ExchangeWebServices.FindFolderType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e997bd1fb1374ad0c54e2309daa7c7c1fc4aeebe" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20600995" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FindFolderType : ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FindFolderType extends ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.FindFolderType" />
  <TypeSignature Language="VB.NET" Value="Public Class FindFolderType&#xA;Inherits BaseRequestType" />
  <TypeSignature Language="C++ CLI" Value="public ref class FindFolderType : ExchangeWebServices::BaseRequestType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.BaseRequestType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/messages")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>O <see cref="T:ExchangeWebServices.FindFolderType" /> classe representa uma solicitação para localizar pastas em uma caixa de correio.</summary>
    <remarks>
      <para>FindFolder a operação localiza as subpastas de uma pasta identificada. A operação FindFolder retorna apenas os primeiros 512 bytes de qualquer propriedade transmissíveis. Para Unicode, a operação FindFolder retorna os primeiros 255 caracteres, usando uma cadeia de caracteres Unicode terminada em nulo. Use a operação de GetFolder para obter as propriedades de pasta adicional.</para> Restrições de 
      <para>sobre as propriedades de pasta, mas não as propriedades de item são permitidas. Classificar funcionalidade não está disponível para FindFolder respostas. Consultas agrupadas não estão disponíveis para consultas FindFolder. </para><para /></remarks>
    <example>
      <para>o exemplo a seguir mostra uma consulta FindFolder que retorna os seguintes resultados:</para>
      <list type="number">
        <item>
          <description>Uma pesquisa de profundidade passagem da caixa de entrada.</description>
        </item>
        <item>
          <description>Todas as propriedades que são definidas para o FolderShape padrão em uma operação FindFolder.</description>
        </item>
        <item>
          <description>Todas as pastas que têm um nome de exibição de SentOnlyToMe. Caso não precisam corresponder.</description>
        </item>
        <item>
          <description>Um esquema de paginação fracionais que retorna no máximo uma única pasta que será iniciado após a primeira pasta.</description>
        </item>
      </list>
      <code>static void FindFolder(ExchangeServiceBinding esb)
{
    // Create the request and specify the traversal type.
    FindFolderType &lt;span class="label"&gt;findFolderRequest&lt;/span&gt; = new FindFolderType();
    &lt;span class="label"&gt;findFolderRequest&lt;/span&gt;.Traversal = FolderQueryTraversalType.Deep;

    // Define the properties to be returned in the response.
    FolderResponseShapeType responseShape = new FolderResponseShapeType();
    responseShape.BaseShape = DefaultShapeNamesType.Default;
    &lt;span class="label"&gt;findFolderRequest&lt;/span&gt;.FolderShape = responseShape;

    // Identify which folders to search.
    DistinguishedFolderIdType[] folderIDArray = new DistinguishedFolderIdType[1];
    folderIDArray[0] = new DistinguishedFolderIdType();
    folderIDArray[0].Id = DistinguishedFolderIdNameType.inbox;

    // Add the folders to search to the request.
    &lt;span class="label"&gt;findFolderRequest&lt;/span&gt;.ParentFolderIds = folderIDArray;

    // Restriction based on the folder display name.
    RestrictionType restriction = new RestrictionType();
    PathToUnindexedFieldType fldrRestriction = new PathToUnindexedFieldType();
    fldrRestriction.FieldURI = UnindexedFieldURIType.folderDisplayName;
    // Identify the folder name to restrict on.
    ContainsExpressionType contains = new ContainsExpressionType();
    contains.ContainmentMode = ContainmentModeType.Substring;
    contains.ContainmentModeSpecified = true;
    contains.ContainmentComparison = ContainmentComparisonType.IgnoreCase;
    contains.ContainmentComparisonSpecified = true;
    contains.Item = fldrRestriction;
    contains.Constant = new ConstantValueType();
    contains.Constant.Value = "SentOnlyToMe";
    restriction.Item = contains;
    &lt;span class="label"&gt;findFolderRequest&lt;/span&gt;.Restriction = restriction;

    // Define the paging scheme for the result set.
    FractionalPageViewType fpvt = new FractionalPageViewType();
    fpvt.MaxEntriesReturned = 1;
    fpvt.MaxEntriesReturnedSpecified = true;
    fpvt.Numerator = 1;
    fpvt.Denominator = 4;
    &lt;span class="label"&gt;findFolderRequest&lt;/span&gt;.Item = fpvt;

    try
    {
        // Send the request and get the response.
        FindFolderResponseType findFolderResponse = esb.FindFolder(&lt;span class="label"&gt;findFolderRequest&lt;/span&gt;);

        // Get the response messages.
        ResponseMessageType[] rmta = findFolderResponse.ResponseMessages.Items;

        foreach (ResponseMessageType rmt in rmta)
        {
            FindFolderResponseMessageType ffrmt = (rmt as FindFolderResponseMessageType);

            FindFolderParentType ffpt = ffrmt.RootFolder;
            BaseFolderType[] folders = ffpt.Folders;
            
            foreach (BaseFolderType folder in folders)
            {
                // Check folder type
                if (folder is CalendarFolderType)
                {
                    CalendarFolderType fldr = (folder as CalendarFolderType);
                    // TODO: Handle calendar folder
                }
                else 
                { 
                    // TODO: Handle folders, search folders, tasks folders,
                    // and contacts folder
                }
            }
        }
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
    }
}</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FindFolderType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.FindFolderType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FindFolderType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>O <see cref="T:ExchangeWebServices.FindFolderType" /> construtor inicializa uma nova instância do <see cref="T:ExchangeWebServices.FindFolderType" /> classe.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FolderShape">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.FolderResponseShapeType FolderShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.FolderResponseShapeType FolderShape" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindFolderType.FolderShape" />
      <MemberSignature Language="VB.NET" Value="Public Property FolderShape As FolderResponseShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::FolderResponseShapeType ^ FolderShape { ExchangeWebServices::FolderResponseShapeType ^ get(); void set(ExchangeWebServices::FolderResponseShapeType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.FolderResponseShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O <see cref="P:ExchangeWebServices.FindFolderType.FolderShape" /> propriedade obtém ou define a forma do conjunto de consulta. Essa propriedade é obrigatória. Esta é uma propriedade de leitura/gravação.</summary>
        <value>O <see cref="P:ExchangeWebServices.FindFolderType.FolderShape" /> propriedade retornará uma <see cref="T:ExchangeWebServices.FolderResponseShapeType" /> objeto que contém a descrição das propriedades que são solicitados a serem retornados no conjunto de resultados.</value>
        <remarks>
          <para>O <see cref="P:ExchangeWebServices.FindFolderType.FolderShape" /> propriedade descreve quais propriedades são retornadas pela resposta FindFolder.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.BasePagingType Item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.BasePagingType Item" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindFolderType.Item" />
      <MemberSignature Language="VB.NET" Value="Public Property Item As BasePagingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::BasePagingType ^ Item { ExchangeWebServices::BasePagingType ^ get(); void set(ExchangeWebServices::BasePagingType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("FractionalPageFolderView", typeof(ExchangeWebServices.FractionalPageViewType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("IndexedPageFolderView", typeof(ExchangeWebServices.IndexedPageViewType))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.BasePagingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O <see cref="P:ExchangeWebServices.FindFolderType.Item" /> propriedade obtém ou define o tipo de paginação que descreve como o conjunto de resultados de consulta é paginado na resposta. Essa propriedade obtém ou define um um <see cref="T:ExchangeWebServices.IndexedPageViewType" /> ou <see cref="T:ExchangeWebServices.FractionalPageViewType" /> objeto. Essa propriedade é opcional. Esta é uma propriedade de leitura/gravação.</summary>
        <value>O <see cref="P:ExchangeWebServices.FindFolderType.Item" /> propriedade retornará uma <see cref="T:ExchangeWebServices.BasePagingType" /> object que representa o tipo de paginação a serem executadas para o conjunto de consulta.</value>
        <remarks>
          <para>O <see cref="P:ExchangeWebServices.FindFolderType.Item" /> propriedade pode ser definida com qualquer um a <see cref="T:ExchangeWebServices.IndexedPageViewType" /> ou <see cref="T:ExchangeWebServices.FractionalPageViewType" /> objetos. Todos esses tipos de estender <see cref="T:ExchangeWebServices.BasePagingType" />, que é uma classe abstrata. Essa propriedade é opcional. Se essa propriedade não estiver definida, o comportamento padrão é retornar um modo de exibição que inclui todas as pastas no conjunto de resultados.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentFolderIds">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.BaseFolderIdType[] ParentFolderIds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.BaseFolderIdType[] ParentFolderIds" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindFolderType.ParentFolderIds" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentFolderIds As BaseFolderIdType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;ExchangeWebServices::BaseFolderIdType ^&gt; ^ ParentFolderIds { cli::array &lt;ExchangeWebServices::BaseFolderIdType ^&gt; ^ get(); void set(cli::array &lt;ExchangeWebServices::BaseFolderIdType ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("FolderId", typeof(ExchangeWebServices.FolderIdType), IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("DistinguishedFolderId", typeof(ExchangeWebServices.DistinguishedFolderIdType), IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.BaseFolderIdType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O <see cref="P:ExchangeWebServices.FindFolderType.ParentFolderIds" /> propriedade obtém ou define as pastas que a operação FindFolder pesquisa. Essa propriedade é obrigatória. Esta é uma propriedade de leitura/gravação.</summary>
        <value>O <see cref="P:ExchangeWebServices.FindFolderType.ParentFolderIds" /> propriedade retorna uma matriz de <see cref="T:ExchangeWebServices.BaseFolderIdType" /> objetos que contém os identificadores de todas as pastas para a operação FindFolder pesquisar.</value>
        <remarks>
          <para>O <see cref="P:ExchangeWebServices.FindItemType.ParentFolderIds" /> propriedade pode ser definida com matrizes de qualquer um <see cref="T:ExchangeWebServices.FolderIdType" /> ou <see cref="T:ExchangeWebServices.DistinguishedFolderIdType" /> objetos. Esses dois tipos de estendem <see cref="T:ExchangeWebServices.BaseFolderIdType" />, que é uma classe abstrata.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Restriction">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.RestrictionType Restriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.RestrictionType Restriction" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindFolderType.Restriction" />
      <MemberSignature Language="VB.NET" Value="Public Property Restriction As RestrictionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::RestrictionType ^ Restriction { ExchangeWebServices::RestrictionType ^ get(); void set(ExchangeWebServices::RestrictionType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.RestrictionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O <see cref="P:ExchangeWebServices.FindFolderType.Restriction" /> propriedade obtém ou define os parâmetros de pesquisa que definem uma consulta de pasta. Essa propriedade é opcional. Esta é uma propriedade de leitura/gravação.</summary>
        <value>O <see cref="P:ExchangeWebServices.FindFolderType.Restriction" /> propriedade retornará uma <see cref="T:ExchangeWebServices.RestrictionType" /> objeto que contém os parâmetros de pesquisa que definem a consulta.</value>
        <remarks>
          <para>O <see cref="P:ExchangeWebServices.FindFolderType.Restriction" /> propriedade, se for usado, deve usar somente as propriedades da pasta. O <see cref="P:ExchangeWebServices.FindFolderType.Restriction" /> propriedade pode conter as seguintes expressões de pesquisa:</para>
          <list type="bullet">
            <item>
              <description>e</description>
            </item>
            <item>
              <description>contém</description>
            </item>
            <item>
              <description>exclui</description>
            </item>
            <item>
              <description>Exists</description>
            </item>
            <item>
              <description>IsEqualTo</description>
            </item>
            <item>
              <description>IsGreaterThan</description>
            </item>
            <item>
              <description>IsGreaterThanOrEqualTo</description>
            </item>
            <item>
              <description>IsLessThan </description>
            </item>
            <item>
              <description>IsLessThanOrEqualTo</description>
            </item>
            <item>
              <description>IsNotEqualTo</description>
            </item>
            <item>
              <description>não</description>
            </item>
            <item>
              <description>ou</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Traversal">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.FolderQueryTraversalType Traversal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ExchangeWebServices.FolderQueryTraversalType Traversal" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.FindFolderType.Traversal" />
      <MemberSignature Language="VB.NET" Value="Public Property Traversal As FolderQueryTraversalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::FolderQueryTraversalType Traversal { ExchangeWebServices::FolderQueryTraversalType get(); void set(ExchangeWebServices::FolderQueryTraversalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.FolderQueryTraversalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O <see cref="P:ExchangeWebServices.FindFolderType.Traversal" /> propriedade obtém ou define o esquema de passagem que é usado para pesquisar pastas. Essa propriedade é obrigatória. Esta é uma propriedade de leitura/gravação.</summary>
        <value>O <see cref="P:ExchangeWebServices.FindFolderType.Traversal" /> propriedade retornará uma <see cref="T:ExchangeWebServices.FolderQueryTraversalType" /> enumeração que define o tipo de passagem que é executada para a pesquisa.</value>
        <remarks>
          <para>A operação FindFolder suporta pesquisas de pasta de passagem superficial e minuciosa.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>