<Type Name="CreateAttachmentType" FullName="ExchangeWebServices.CreateAttachmentType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7cd0589cfb5fd51212bca2f3e9fcfe0e6b3a2250" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20601681" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CreateAttachmentType : ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CreateAttachmentType extends ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.CreateAttachmentType" />
  <TypeSignature Language="VB.NET" Value="Public Class CreateAttachmentType&#xA;Inherits BaseRequestType" />
  <TypeSignature Language="C++ CLI" Value="public ref class CreateAttachmentType : ExchangeWebServices::BaseRequestType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.BaseRequestType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/messages")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a4589-101">O <see cref="T:ExchangeWebServices.CreateAttachmentType" /> classe representa uma solicitação para anexar um item ou arquivo a um item especificado no banco de dados do Exchange.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4589-101">The <see cref="T:ExchangeWebServices.CreateAttachmentType" /> class represents a request to attach an item or file to a specified item in the Exchange database.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="a4589-102">
        <para>Você não pode anexar um item existente a outro item. Para anexar o conteúdo de um item existente, passe o <see cref="P:ExchangeWebServices.ItemType.MimeContent" /> do item existente para o anexo que você deseja criar. Certifique-se de que você null check-out de todas as propriedades que são retornadas por um item existente. Somente o conteúdo de email extensões MIME (Multipurpose Internet) deve ser usado no anexo. Se você tentar anexar um item existente a outro item, a resposta conterá um erro, porque o banco de dados do Exchange não pode conter identificadores de item duplicado.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="a4589-102">
          <para>You cannot attach an existing item to another item. To attach the contents of an existing item, pass the <see cref="P:ExchangeWebServices.ItemType.MimeContent" /> of the existing item to the attachment that you want to create. Make sure that you null out all properties that are returned for an existing item. Only the Multipurpose Internet Mail Extensions (MIME) content should be used in the attachment. If you try to attach an existing item to another item, the response will contain an error because the Exchange database cannot include duplicate item identifiers.</para>
          <para />
        </span>
      </span>
    </remarks>
    <example>
      <span data-ttu-id="a4589-103">
        <para>O exemplo de código a seguir mostra uma solicitação de anexo de criação que cria um anexo de arquivo e um item em um item existente do banco de dados do Exchange.</para>
        <code>static void CreateAttachment(ExchangeServiceBinding esb)
{
    // Create the item attachment.
    MessageType message = new MessageType();
    message.Subject = "Example subject";
    message.Importance = ImportanceChoicesType.Low;
    message.ImportanceSpecified = true;

    ItemAttachmentType itemAttach = new ItemAttachmentType();
    itemAttach.Name = "Message Attachment Example";
    itemAttach.Item = message;

    // Create the file attachment.
    FileAttachmentType fileAttach = new FileAttachmentType();
    fileAttach.Name = "filename.txt";
    fileAttach.ContentType = "text/plain";

    byte[] content;
    using (FileStream fileStream = new FileStream("C:\\cas.txt",
        FileMode.Open, FileAccess.Read))
    {
        content = new byte[fileStream.Length];
        fileStream.Read(content, 0, content.Length);
    }

    fileAttach.Content = content;

    // Create the CreateAttachment request.
    CreateAttachmentType &lt;span class="label"&gt;reqCreateAttach&lt;/span&gt;= new CreateAttachmentType();

    // Identify the item that will have the attachments.
    ItemIdType item = new ItemIdType();
    item.Id = "AAAlAE1BQG1h";
    item.ChangeKey = "DwAAABYAAA"; 
    
    // Add the parent item to the request.
    &lt;span class="label"&gt;reqCreateAttach&lt;/span&gt;.ParentItemId = item;

    // Add attachments to the request.
    &lt;span class="label"&gt;reqCreateAttach&lt;/span&gt;.Attachments = new AttachmentType[2];
    &lt;span class="label"&gt;reqCreateAttach&lt;/span&gt;.Attachments[0] = itemAttach;
    &lt;span class="label"&gt;reqCreateAttach&lt;/span&gt;.Attachments[1] = fileAttach;

    try
    {
        CreateAttachmentResponseType resp = esb.CreateAttachment(&lt;span class="label"&gt;reqCreateAttach&lt;/span&gt;);
        ArrayOfResponseMessagesType aorit = resp.ResponseMessages;
        ResponseMessageType[] rmta = aorit.Items;

        foreach (ResponseMessageType rmt in rmta)
        {
            if (rmt.ResponseClass == ResponseClassType.Success)
            {
                AttachmentInfoResponseMessageType airmt = rmt as AttachmentInfoResponseMessageType;
                foreach (AttachmentType atch in airmt.Attachments)
                {
                    if (atch is ItemAttachmentType)
                    {
                        Console.WriteLine("Created item attachment");
                    }
                    else if (atch is FileAttachmentType)
                    {
                        Console.WriteLine("Created file attachment");
                    }
                    else
                    {
                        throw new Exception("Unknown attachment");
                    }
                }
            }
        }
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
    }
}</code>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="a4589-103">
          <para>The following code example shows a create attachment request that creates a file and item attachment on an existing item in the Exchange database.</para>
          <code>static void CreateAttachment(ExchangeServiceBinding esb)
{
    // Create the item attachment.
    MessageType message = new MessageType();
    message.Subject = "Example subject";
    message.Importance = ImportanceChoicesType.Low;
    message.ImportanceSpecified = true;

    ItemAttachmentType itemAttach = new ItemAttachmentType();
    itemAttach.Name = "Message Attachment Example";
    itemAttach.Item = message;

    // Create the file attachment.
    FileAttachmentType fileAttach = new FileAttachmentType();
    fileAttach.Name = "filename.txt";
    fileAttach.ContentType = "text/plain";

    byte[] content;
    using (FileStream fileStream = new FileStream("C:\\cas.txt",
        FileMode.Open, FileAccess.Read))
    {
        content = new byte[fileStream.Length];
        fileStream.Read(content, 0, content.Length);
    }

    fileAttach.Content = content;

    // Create the CreateAttachment request.
    CreateAttachmentType &lt;span class="label"&gt;reqCreateAttach&lt;/span&gt;= new CreateAttachmentType();

    // Identify the item that will have the attachments.
    ItemIdType item = new ItemIdType();
    item.Id = "AAAlAE1BQG1h";
    item.ChangeKey = "DwAAABYAAA"; 
    
    // Add the parent item to the request.
    &lt;span class="label"&gt;reqCreateAttach&lt;/span&gt;.ParentItemId = item;

    // Add attachments to the request.
    &lt;span class="label"&gt;reqCreateAttach&lt;/span&gt;.Attachments = new AttachmentType[2];
    &lt;span class="label"&gt;reqCreateAttach&lt;/span&gt;.Attachments[0] = itemAttach;
    &lt;span class="label"&gt;reqCreateAttach&lt;/span&gt;.Attachments[1] = fileAttach;

    try
    {
        CreateAttachmentResponseType resp = esb.CreateAttachment(&lt;span class="label"&gt;reqCreateAttach&lt;/span&gt;);
        ArrayOfResponseMessagesType aorit = resp.ResponseMessages;
        ResponseMessageType[] rmta = aorit.Items;

        foreach (ResponseMessageType rmt in rmta)
        {
            if (rmt.ResponseClass == ResponseClassType.Success)
            {
                AttachmentInfoResponseMessageType airmt = rmt as AttachmentInfoResponseMessageType;
                foreach (AttachmentType atch in airmt.Attachments)
                {
                    if (atch is ItemAttachmentType)
                    {
                        Console.WriteLine("Created item attachment");
                    }
                    else if (atch is FileAttachmentType)
                    {
                        Console.WriteLine("Created file attachment");
                    }
                    else
                    {
                        throw new Exception("Unknown attachment");
                    }
                }
            }
        }
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
    }
}</code>
        </span>
      </span>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CreateAttachmentType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.CreateAttachmentType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CreateAttachmentType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4589-104">O <see cref="T:ExchangeWebServices.CreateAttachmentType" /> construtor inicializa uma nova instância do <see cref="T:ExchangeWebServices.CreateAttachmentType" /> classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4589-104">The <see cref="T:ExchangeWebServices.CreateAttachmentType" /> constructor initializes a new instance of the <see cref="T:ExchangeWebServices.CreateAttachmentType" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attachments">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.AttachmentType[] Attachments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.AttachmentType[] Attachments" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.CreateAttachmentType.Attachments" />
      <MemberSignature Language="VB.NET" Value="Public Property Attachments As AttachmentType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;ExchangeWebServices::AttachmentType ^&gt; ^ Attachments { cli::array &lt;ExchangeWebServices::AttachmentType ^&gt; ^ get(); void set(cli::array &lt;ExchangeWebServices::AttachmentType ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("FileAttachment", typeof(ExchangeWebServices.FileAttachmentType), IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("ItemAttachment", typeof(ExchangeWebServices.ItemAttachmentType), IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.AttachmentType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4589-105">O <see cref="P:ExchangeWebServices.CreateAttachmentType.Attachments" /> propriedade obtém ou define os anexos para criar para a operação CreateAttachment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4589-105">The <see cref="P:ExchangeWebServices.CreateAttachmentType.Attachments" /> property gets or sets the attachments to create for the CreateAttachment operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4589-106">O <see cref="P:ExchangeWebServices.CreateAttachmentType.Attachments" /> propriedade retornará uma <see cref="T:ExchangeWebServices.AttachmentType" /> matriz que contém o conjunto de anexos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4589-106">The <see cref="P:ExchangeWebServices.CreateAttachmentType.Attachments" /> property returns an <see cref="T:ExchangeWebServices.AttachmentType" /> array that contains the set of attachments.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4589-107">
            <para>O <see cref="P:ExchangeWebServices.CreateAttachmentType.Attachments" /> propriedade pode conter um conjunto de anexos de arquivo e o item.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4589-107">
              <para>The <see cref="P:ExchangeWebServices.CreateAttachmentType.Attachments" /> property can contain a set of file and item attachments.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentItemId">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.ItemIdType ParentItemId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.ItemIdType ParentItemId" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.CreateAttachmentType.ParentItemId" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentItemId As ItemIdType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::ItemIdType ^ ParentItemId { ExchangeWebServices::ItemIdType ^ get(); void set(ExchangeWebServices::ItemIdType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.ItemIdType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4589-108">O <see cref="P:ExchangeWebServices.CreateAttachmentType.ParentItemId" /> propriedade obtém ou define o item pai no banco de dados Exchange recebe os anexos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4589-108">The <see cref="P:ExchangeWebServices.CreateAttachmentType.ParentItemId" /> property gets or sets the parent item in the Exchange database that receives the attachments.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4589-109">O <see cref="P:ExchangeWebServices.CreateAttachmentType.ParentItemId" /> propriedade retornará uma <see cref="T:ExchangeWebServices.ItemIdType" /> que representa o identificador do item pai.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4589-109">The <see cref="P:ExchangeWebServices.CreateAttachmentType.ParentItemId" /> property returns an <see cref="T:ExchangeWebServices.ItemIdType" /> that represents the identifier of the parent item.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="a4589-110">
            <para>O item pai <see cref="P:ExchangeWebServices.ItemIdType.ChangeKey" /> propriedade mudará quando os anexos estão conectados a ele.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4589-110">
              <para>The parent item <see cref="P:ExchangeWebServices.ItemIdType.ChangeKey" /> property will change when the attachments are attached to it.</para>
              <para />
            </span>
          </span>
        </remarks>
        <example>
          <span data-ttu-id="a4589-111">
            <para>ParentItemId</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4589-111">
              <para>ParentItemId</para>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>